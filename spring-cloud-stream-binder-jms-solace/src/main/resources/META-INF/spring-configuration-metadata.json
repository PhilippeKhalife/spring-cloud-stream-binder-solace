{
  "groups": [
    {
      "name": "spring.solace",
      "type": "org.springframework.cloud.stream.binder.jms.solace.config.SolaceConfigurationProperties",
      "sourceType": "org.springframework.cloud.stream.binder.jms.solace.config.SolaceConfigurationProperties"
    }
  ],
  "properties": [
    {
      "name": "spring.solace.host",
      "type": "java.lang.String",
      "description": "Host of solace server e.g. 192.168.99.100",
      "sourceType": "org.springframework.cloud.stream.binder.jms.solace.config.SolaceConfigurationProperties"
    },
    {
      "name": "spring.solace.max-redelivery-attempts",
      "type": "java.lang.Integer",
      "description": "Solace maximum redelivery attempts. If specified, once a message has exceeded the\n specified amount of re-deliveries, it will be automatically sent to the DLQ by the\n broker.\n\n 0 means retry forever, which can cause Poison Messages. 1 means re-try once, which\n implies up to 2 delivery attempts. For any value greater than 0 a DLQ named\n \"#DEAD_MSG_QUEUE\" will be automatically created per message VPN.\n\n NOTE: This is complementary to spring.cloud.stream.bindings.[your-input].consumer.maxAttempts\n since the second provides redelivery behaviour at the JMS binder level. Setting\n maxRedeliveryAttempts flag to some value higher than 0 grants that a poison message will eventually\n appear in the DLQ even if it can not be fetched by Spring Cloud Stream.\n\n Both can be safely configured. If the JMS binder is set to retry, it will consume\n the message and send it directly to the DMQ after a failure scenario. If the message\n cannot be delivered to the binder (e.g. corrupt message) the broker itself will\n route it to the DMQ after maxRedeliveryAttempts.",
      "sourceType": "org.springframework.cloud.stream.binder.jms.solace.config.SolaceConfigurationProperties",
      "defaultValue": 1
    },
    {
      "name": "spring.solace.password",
      "type": "java.lang.String",
      "description": "Password, e.g. admin",
      "sourceType": "org.springframework.cloud.stream.binder.jms.solace.config.SolaceConfigurationProperties"
    },
    {
      "name": "spring.solace.username",
      "type": "java.lang.String",
      "description": "Username, e.g. admin",
      "sourceType": "org.springframework.cloud.stream.binder.jms.solace.config.SolaceConfigurationProperties"
    }
  ],
  "hints": []
}